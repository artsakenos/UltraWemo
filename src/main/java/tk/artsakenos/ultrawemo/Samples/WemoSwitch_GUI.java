/**
 * Copyright 2016 by Andrea Addis
 *
 * Licensed under the Apache License, Version 2.0; you may not use this file
 * except in compliance with the License. You may obtain a copy of the License
 * at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package tk.artsakenos.ultrawemo.Samples;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import tk.artsakenos.ultrawemo.UW_Device;
import tk.artsakenos.ultrawemo.UW_Discovery;

/**
 *
* @author Andrea Addis
 */
public class WemoSwitch_GUI extends javax.swing.JFrame {

    private UW_Device uw_dev;

    private final UW_Discovery uwd = new UW_Discovery() {

        @Override
        public void onDiscover(String deviceName, String deviceIp, int devicePort) {
            log("Found Device: '" + deviceName + "' with address " + deviceIp + "#" + devicePort);
            edtIp.setText(deviceIp);
            edtPort.setText(devicePort + "");
        }
    };

    private final Thread tRefresh = new Thread() {
        @Override
        @SuppressWarnings("SleepWhileInLoop")
        public void run() {
            while (true) {
                try {
                    sleep(5000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(WemoSwitch_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (btnWemo.isEnabled() && uw_dev != null) {
                    try {
                        String state = uw_dev.getService(UW_Device.S_BinaryState);
                    } catch (IOException ex) {
                        Logger.getLogger(WemoSwitch_GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    };

    private void log(String message) {
        memLog.append(message + "\n");
    }

    /**
     * Creates new form WemoSwitch_GUI
     */
    public WemoSwitch_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        memLog = new javax.swing.JTextArea();
        btnWemo = new javax.swing.JToggleButton();
        edtIp = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        edtPort = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        edtIPRange = new javax.swing.JTextField();
        edtIPRange_From = new javax.swing.JTextField();
        edtIPRange_To = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnDiscover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wemo Connector v.0.1");

        memLog.setColumns(20);
        memLog.setRows(5);
        memLog.setText("Discover your device and connect to use it.\n-------------------------------------------\n");
        jScrollPane1.setViewportView(memLog);

        btnWemo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        btnWemo.setText("Wemo OFF");
        btnWemo.setEnabled(false);
        btnWemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWemoActionPerformed(evt);
            }
        });

        edtIp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edtIp.setText("192.168.1.12");

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitle.setText("Wemo Address");

        edtPort.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edtPort.setText("49153");

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        edtIPRange.setText("192.168.1.%s");

        edtIPRange_From.setText("5");

        edtIPRange_To.setText("20");

        jLabel1.setText("IP Range");

        btnDiscover.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDiscover.setText("Discover");
        btnDiscover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiscoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnDiscover, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtIPRange, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtIPRange_From, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtIPRange_To, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDiscover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addComponent(edtIPRange)
                    .addComponent(edtIPRange_From)
                    .addComponent(edtIPRange_To, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtIp, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnConnect))
                            .addComponent(btnWemo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(edtIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTitle)
                        .addComponent(edtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnWemo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnWemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWemoActionPerformed

        if (btnWemo.isSelected()) {
            try {
                uw_dev.setService(UW_Device.S_BinaryState, "1");
                btnWemo.setText("Wemo ON");
            } catch (IOException ex) {
                log("Error while changing state to 1: " + ex.getLocalizedMessage());
            }
        } else {
            try {
                uw_dev.setService(UW_Device.S_BinaryState, "0");
            } catch (IOException ex) {
                log("Error while changing state to 0: " + ex.getLocalizedMessage());
            }
            btnWemo.setText("Wemo OFF");
        }

    }//GEN-LAST:event_btnWemoActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed

        String ip = edtIp.getText();
        int port = Integer.parseInt(edtPort.getText());
        uw_dev = new UW_Device(ip, port);
        String name;
        String state;
        try {
            name = uw_dev.getService(UW_Device.S_FriendlyName);
            state = uw_dev.getService(UW_Device.S_BinaryState);
        } catch (IOException ex) {
            // Logger.getLogger(WemoSwitch_GUI.class.getName()).log(Level.SEVERE, null, ex);
            log("Error while connecting wemo: " + ex.getLocalizedMessage());
            return;
        }
        log("Wemo '" + name + "' connected.");

        if (!state.equals("0")) {
            btnWemo.setSelected(true);
            btnWemo.setText("Wemo ON");
        }
        btnWemo.setEnabled(true);

    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDiscoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiscoverActionPerformed

        String ipRange = edtIPRange.getText();
        int ipFrom = Integer.parseInt(edtIPRange_From.getText());
        int ipTo = Integer.parseInt(edtIPRange_To.getText());
        uwd.discovery_raw(ipRange, ipFrom, ipTo);

    }//GEN-LAST:event_btnDiscoverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WemoSwitch_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WemoSwitch_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WemoSwitch_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WemoSwitch_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new WemoSwitch_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDiscover;
    private javax.swing.JToggleButton btnWemo;
    private javax.swing.JTextField edtIPRange;
    private javax.swing.JTextField edtIPRange_From;
    private javax.swing.JTextField edtIPRange_To;
    private javax.swing.JTextField edtIp;
    private javax.swing.JTextField edtPort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea memLog;
    // End of variables declaration//GEN-END:variables
}
